{"ast":null,"code":"import { GET_ALL_DOGS, GET_DOG_DETAIL, GET_DOGS_BY_NAME, SET_TEMPERAMENT_FILTER, SET_ORIGIN_FILTER, SET_RAZE_ORDER, SET_RAZE_BYWEIGTH_ORDER } from \"./actions\";\nconst initialState = {\n  dogs: [],\n  dogDetail: {\n    nombre: \"juan\",\n    edad: 25,\n    raza: 'pastor aleman',\n    peso: 30\n  },\n  dogId: {},\n  dogsByName: [],\n  originalDogs: []\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_DOGS:\n      return {\n        ...state,\n        dogs: action.payload\n      };\n    case GET_DOG_DETAIL:\n      return {\n        ...state,\n        dogDetail: action.payload\n      };\n    case GET_DOGS_BY_NAME:\n      return {\n        ...state,\n        dogByName: action.payload\n      };\n    case SET_RAZE_ORDER:\n      let copyDogs = [...state.dogs];\n      if (action.payload === 'A') {\n        copyDogs.sort((a, b) => a.nombre.localeCompare(b.nombre));\n      } else if (action.payload === 'D') {\n        copyDogs.sort((a, b) => b.nombre.localeCompare(a.nombre));\n      }\n      return {\n        ...state,\n        dogs: copyDogs\n      };\n    case SET_RAZE_BYWEIGTH_ORDER:\n      let copyDogs1 = [...state.dogs];\n      if (action.payload === 'A') {\n        copyDogs1.sort((a, b) => a.peso.localeCompare(b.peso));\n      } else if (action.payload === 'D') {\n        copyDogs1.sort((a, b) => b.peso.localeCompare(a.peso));\n      }\n      return {\n        ...state,\n        dogs: copyDogs1\n      };\n    case SET_TEMPERAMENT_FILTER:\n      let copyDogs2 = state.dogs.filter(dog => {\n        return dog.temperamento === action.payload;\n      });\n      return {\n        ...state,\n        dogs: copyDogs\n      };\n      x;\n    case SET_ORIGIN_FILTER:\n      const {\n        payload\n      } = action;\n      let filteredDogs = [];\n      if (state.originalDogs.length === 0) {\n        state.originalDogs = [...state.dogs];\n      }\n      if (payload === \"API\") {\n        filteredDogs = state.originalDogs.filter(dog => !isNaN(dog.id));\n      } else if (payload === \"BDD\") {\n        filteredDogs = state.originalDogs.filter(dog => isNaN(dog.id));\n      } else if (payload === \"ALL\") {\n        filteredDogs = [...state.originalDogs];\n      } else {\n        return state;\n      }\n      return {\n        ...state,\n        dogs: filteredDogs\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_ALL_DOGS","GET_DOG_DETAIL","GET_DOGS_BY_NAME","SET_TEMPERAMENT_FILTER","SET_ORIGIN_FILTER","SET_RAZE_ORDER","SET_RAZE_BYWEIGTH_ORDER","initialState","dogs","dogDetail","nombre","edad","raza","peso","dogId","dogsByName","originalDogs","rootReducer","state","action","type","payload","dogByName","copyDogs","sort","a","b","localeCompare","copyDogs1","copyDogs2","filter","dog","temperamento","x","filteredDogs","length","isNaN","id"],"sources":["C:/Users/claudio/Desktop/PI-Dogs-main(nuevo)/PI-Dogs-main/client/src/redux/reducer.js"],"sourcesContent":["import {\r\n  GET_ALL_DOGS, GET_DOG_DETAIL, GET_DOGS_BY_NAME,\r\n  SET_TEMPERAMENT_FILTER, SET_ORIGIN_FILTER,\r\n  SET_RAZE_ORDER, SET_RAZE_BYWEIGTH_ORDER\r\n} from \"./actions\";\r\n\r\n\r\nconst initialState = {\r\n  dogs: [],\r\n  dogDetail: {\r\n    nombre:\"juan\",\r\n    edad:25,\r\n    raza:'pastor aleman',\r\n    peso:30\r\n  },\r\n  dogId: {},\r\n  dogsByName: [],\r\n  originalDogs: []\r\n};\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_DOGS:\r\n      return { ...state, dogs: action.payload }\r\n\r\n\r\n\r\n\r\n\r\n    case GET_DOG_DETAIL:\r\n      return { ...state, dogDetail: action.payload }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    case GET_DOGS_BY_NAME:\r\n      return { ...state, dogByName: action.payload }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    case SET_RAZE_ORDER:\r\n      let copyDogs = [...state.dogs];\r\n      if (action.payload === 'A') {\r\n        copyDogs.sort((a, b) => a.nombre.localeCompare(b.nombre));\r\n      } else if (action.payload === 'D') {\r\n        copyDogs.sort((a, b) => b.nombre.localeCompare(a.nombre));\r\n      }\r\n      return { ...state, dogs: copyDogs };\r\n\r\n\r\n\r\n\r\n\r\n    case SET_RAZE_BYWEIGTH_ORDER:\r\n      let copyDogs1 = [...state.dogs]\r\n      if (action.payload === 'A') {\r\n        copyDogs1.sort((a, b) => a.peso.localeCompare(b.peso));\r\n      } else if (action.payload === 'D') {\r\n        copyDogs1.sort((a, b) => b.peso.localeCompare(a.peso));\r\n      }\r\n      return { ...state, dogs: copyDogs1 };\r\n\r\n\r\n\r\n\r\n    case SET_TEMPERAMENT_FILTER:\r\n      let copyDogs2 = state.dogs.filter((dog) => {\r\n        return dog.temperamento === action.payload\r\n      })\r\n      return { ...state, dogs: copyDogs }\r\n\r\nx\r\n\r\n\r\n    case SET_ORIGIN_FILTER:\r\n      const { payload } = action;\r\n      let filteredDogs = [];\r\n\r\n      if (state.originalDogs.length === 0) {\r\n        state.originalDogs = [...state.dogs];\r\n      }\r\n      if (payload === \"API\") {\r\n        filteredDogs = state.originalDogs.filter((dog) => !isNaN(dog.id));\r\n      } else if (payload === \"BDD\") {\r\n        filteredDogs = state.originalDogs.filter((dog) => isNaN(dog.id));\r\n      } else if (payload === \"ALL\") {\r\n        filteredDogs = [...state.originalDogs];\r\n      } else {\r\n        return state;\r\n      }\r\n      return { ...state, dogs: filteredDogs };\r\n\r\n\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}