{"ast":null,"code":"import { GET_ALL_DOGS, GET_DOG_DETAIL, GET_DOGS_BY_NAME, GET_TEMPERAMENTS, SET_TEMPERAMENT_FILTER, SET_ORIGIN_FILTER, SET_RAZE_ORDER, SET_RAZE_BYWEIGTH_ORDER, CLEAN_DETAIL } from \"./actions\";\nconst initialState = {\n  dogs: [],\n  dogDetail: {},\n  allDogs: [],\n  dogId: {},\n  dogsByName: [],\n  originalDogs: [],\n  allTemperaments: []\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_DOGS:\n      return {\n        ...state,\n        dogs: action.payload,\n        allDogs: action.payload\n      };\n    case GET_DOG_DETAIL:\n      return {\n        ...state,\n        dogDetail: action.payload\n      };\n    case GET_DOGS_BY_NAME:\n      return {\n        ...state,\n        dogsByName: action.payload\n      };\n    case SET_RAZE_ORDER:\n      let copyDogs = [...state.dogs];\n      if (action.payload === 'A') {\n        copyDogs.sort((a, b) => a.nombre.localeCompare(b.nombre));\n      } else if (action.payload === 'D') {\n        copyDogs.sort((a, b) => b.nombre.localeCompare(a.nombre));\n      }\n      return {\n        ...state,\n        dogs: copyDogs\n      };\n    case SET_RAZE_BYWEIGTH_ORDER:\n      let copyDogs1 = [...state.dogs];\n      if (action.payload === 'A') {\n        copyDogs1.sort((a, b) => {\n          const pesoA = parseFloat(a.peso.split('-')[0]);\n          const pesoB = parseFloat(b.peso.split('-')[0]);\n          return pesoA - pesoB;\n        });\n      } else if (action.payload === 'D') {\n        copyDogs1.sort((a, b) => {\n          const pesoA = parseFloat(a.peso.split('-')[1]);\n          const pesoB = parseFloat(b.peso.split('-')[1]);\n          return pesoB - pesoA;\n        });\n      }\n      return {\n        ...state,\n        dogs: copyDogs1\n      };\n    case GET_TEMPERAMENTS:\n      return {\n        ...state,\n        allTemperaments: action.payload\n      };\n    case SET_TEMPERAMENT_FILTER:\n      const filterTemp = state.allDogs;\n      const {\n        payload\n      } = action;\n      const temperamentFilter = payload === \"All\" ? filterTemp : filterTemp.filter(el => el.temperamentos && el.temperamentos.includes(payload));\n      return {\n        ...state,\n        dogs: temperamentFilter\n      };\n    case SET_ORIGIN_FILTER:\n      let filteredDogs = [];\n      if (state.originalDogs.length === 0) {\n        state.originalDogs = [...state.dogs];\n      }\n      if (action.payload === \"API\") {\n        filteredDogs = state.originalDogs.filter(dog => !isNaN(dog.id));\n      } else if (action.payload === \"BDD\") {\n        filteredDogs = state.originalDogs.filter(dog => isNaN(dog.id));\n      } else if (action.payload === \"ALL\") {\n        filteredDogs = [...state.originalDogs];\n      } else {\n        return state;\n      }\n      return {\n        ...state,\n        dogs: filteredDogs\n      };\n    case CLEAN_DETAIL:\n      return {\n        ...state,\n        dogDetail: {}\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_ALL_DOGS","GET_DOG_DETAIL","GET_DOGS_BY_NAME","GET_TEMPERAMENTS","SET_TEMPERAMENT_FILTER","SET_ORIGIN_FILTER","SET_RAZE_ORDER","SET_RAZE_BYWEIGTH_ORDER","CLEAN_DETAIL","initialState","dogs","dogDetail","allDogs","dogId","dogsByName","originalDogs","allTemperaments","rootReducer","state","action","type","payload","copyDogs","sort","a","b","nombre","localeCompare","copyDogs1","pesoA","parseFloat","peso","split","pesoB","filterTemp","temperamentFilter","filter","el","temperamentos","includes","filteredDogs","length","dog","isNaN","id"],"sources":["C:/Users/claudio/Desktop/PI-Dogs/client/src/redux/reducer.js"],"sourcesContent":["import {\r\n  GET_ALL_DOGS, GET_DOG_DETAIL, GET_DOGS_BY_NAME, GET_TEMPERAMENTS,\r\n  SET_TEMPERAMENT_FILTER, SET_ORIGIN_FILTER,\r\n  SET_RAZE_ORDER, SET_RAZE_BYWEIGTH_ORDER, CLEAN_DETAIL\r\n} from \"./actions\";\r\n\r\n\r\nconst initialState = {\r\n  dogs: [],\r\n  dogDetail: {},\r\n  allDogs: [],\r\n  dogId: {},\r\n  dogsByName: [],\r\n  originalDogs: [],\r\n  allTemperaments: []\r\n};\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_DOGS:\r\n      return { ...state, dogs: action.payload, allDogs: action.payload }\r\n\r\n\r\n    case GET_DOG_DETAIL:\r\n      return { ...state, dogDetail: action.payload }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    case GET_DOGS_BY_NAME:\r\n      return { ...state, dogsByName: action.payload }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    case SET_RAZE_ORDER:\r\n      let copyDogs = [...state.dogs];\r\n      if (action.payload === 'A') {\r\n        copyDogs.sort((a, b) => a.nombre.localeCompare(b.nombre));\r\n      } else if (action.payload === 'D') {\r\n        copyDogs.sort((a, b) => b.nombre.localeCompare(a.nombre));\r\n      }\r\n      return { ...state, dogs: copyDogs };\r\n\r\n\r\n\r\n\r\n\r\n      case SET_RAZE_BYWEIGTH_ORDER:\r\n        let copyDogs1 = [...state.dogs];\r\n        if (action.payload === 'A') {\r\n          copyDogs1.sort((a, b) => {\r\n            const pesoA = parseFloat(a.peso.split('-')[0]);\r\n            const pesoB = parseFloat(b.peso.split('-')[0]);\r\n            return pesoA - pesoB;\r\n          });\r\n        } else if (action.payload === 'D') {\r\n          copyDogs1.sort((a, b) => {\r\n            const pesoA = parseFloat(a.peso.split('-')[1]);\r\n            const pesoB = parseFloat(b.peso.split('-')[1]);\r\n            return pesoB - pesoA;\r\n          });\r\n        }\r\n        return { ...state, dogs: copyDogs1 };\r\n      \r\n\r\n    case GET_TEMPERAMENTS:\r\n      return { ...state, allTemperaments: action.payload };\r\n\r\n\r\n      case SET_TEMPERAMENT_FILTER:\r\n        const filterTemp = state.allDogs;\r\n        const { payload } = action;\r\n        const temperamentFilter = payload === \"All\" ? filterTemp : filterTemp.filter(el => el.temperamentos && el.temperamentos.includes(payload));\r\n        return {\r\n          ...state,\r\n          dogs: temperamentFilter\r\n        };\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    case SET_ORIGIN_FILTER:\r\n      \r\n      let filteredDogs = [];\r\n\r\n      if (state.originalDogs.length === 0) {\r\n        state.originalDogs = [...state.dogs];\r\n      }\r\n      if (action.payload === \"API\") {\r\n        filteredDogs = state.originalDogs.filter((dog) => !isNaN(dog.id));\r\n      } else if (action.payload === \"BDD\") {\r\n        filteredDogs = state.originalDogs.filter((dog) => isNaN(dog.id));\r\n      } else if (action.payload === \"ALL\") {\r\n        filteredDogs = [...state.originalDogs];\r\n      } else {\r\n        return state;\r\n      }\r\n      return { ...state, dogs: filteredDogs };\r\n\r\n\r\n\r\n    case CLEAN_DETAIL:\r\n      return {\r\n        ...state,\r\n        dogDetail: {}\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}